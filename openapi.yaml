openapi: 3.0.3
info:
  title: Process Delivery - OpenAPI 3.0
  description: Гумирова Алина
  version: v1
security:
- bearerAuth: []
- basicAuth: []
servers:
  - url: https://delivery.swagger.io/api/v3
tags:
  - name: auth
    description: Operations about user
  - name: client
    description: Operations about client
  - name: notification
    description: Operations about notification  
paths:
 
  /client/{id}:
    get:
      tags:
        - client
      operationId: ReceiveClient  
      summary: Recieve info about  client
      description: |
        Receive \
        info about \
        client
      parameters:
        - name: id
          in: path
          description: ID client
          required: true
          schema:
            type: integer
            format: uuid
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'          
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
        '422':
          description: Validation exception          
                  
  /notification:
    post:
      tags:
        - notification
      summary: Create a new notification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Notification'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                  - $ref: '#/components/schemas/Notification'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Notification'
        '422':
          description: Validation exception   
  /auth/login:
    post:
      tags:
        - auth
      summary: Authenticate a user
      description: Create new session for user
      operationId: TODO
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/xml: 
            schema:
              $ref: '#/components/schemas/User' 
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'          
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid ID supplied
        '401':
          description: Incorrect credentials
        '404':
          description: User not found
        '422':
          description: Validation exception
  /auth/logout:
    post:
      tags:
        - auth
      security:
        - bearerAuth: []
        - basicAuth: []
      summary: Logout a new user
      description: Finished new user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'          
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid ID supplied
        '404':
          description: User not found
        '422':
          description: Validation exception        
          
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        phone:
          type: string
          example: +79813453432
        password:
          type: string
          example: 75678Dfgh
        role:
          type: string
          enum: 
            - client
            - courier
            - manager
    Notification:
      type: object
      properties:
        recipient:
          type: string
        status:
          type: string
          enum: 
           - created
           - in progress
           - sent
        send_at:
          type: string
          example: 10.10.2024           
        created_at:
          type: string
          format: data
          example: 10.10.2024           
        type:
          type: string
          enum: 
           - status
        text:
          type: string
          example: Изменен статус           
  securitySchemes:
    basicAuth:
      type: http
      sheme: basic
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    apiKey:
      type: apiKey
      in: header
      name: api-key